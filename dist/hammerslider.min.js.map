{"version":3,"sources":["hammerslider.js","raf-polyfill.js","touch-events.js"],"names":["HammerSlider","_this","options","SLIDER","contentWidth","undefined","container","slides","dotContainer","dots","slideData","transform","currentSlideIndex","lastSlideIndex","isLastSlide","currentDistance","eventListeners","OPTIONS","slideShow","slideInterval","slideSpeed","startSlide","alignSlides","dragThreshold","minimumDragDistance","stopAfterInteraction","infinite","mouseDrag","beforeSlideChange","afterSlideChange","onSetup","classPrefix","mergeObjects","CLASSES","slide","dotItem","dotActiveClass","dragging","target","source","key","hasOwnProperty","getElementChildren","element","selector","all","addEvent","event","func","bool","addEventListener","remove","removeEventListener","addClass","className","classList","add","removeClass","forEachItem","array","callback","startIndex","i","length","returnValue","getPercentageOfTotal","fraction","total","getItemsAsArray","nodeList","returnArray","item","push","getSupportedProperty","property","prefixes","div","document","createElement","prefix","formattedProperty","style","getCurrentTranslate","window","getComputedStyle","getPropertyValue","transformType","match","transformValue","parseFloat","split","offsetWidth","setTranslate","value","threeD","type","translate","to","setItemWidth","containerWidth","index","width","Math","round","setItemAlignment","alignment","align","left","center","right","setItemAlignDistance","alignItem","itemArray","alignDistance","setDistanceToItem","distanceToThis","reduce","accumulator","innerIndex","setDistanceBetweenItems","lastItemIndex","nextItemIndex","distanceToNext","setItemDistanceToFlip","distanceToFlip","setItemInfinitePosition","itemData","direction","itemToPosition","setSlideData","items","setSlideWidth","setSlideAlignDistance","setDistanceToSlide","setDistanceBetweenSlides","setSlideDistanceToFlip","map","counter","flip","position","firstSlide","slideBeforeLast","lastSlide","currentSlide","slideBefore","isLastItemIndex","lastIndex","getNextItemIndex","currentItemIndex","slideTo","jumpTo","stopSlideshow","setActiveDot","animate","slideDistance","increment","currPos","currentTime","start","change","render","easeOutQuint","animationFrame","requestAnimationFrame","t","b","c","d","startSlideshow","autoTimeOut","setTimeout","cancelAnimationFrame","clearTimeout","shouldResumeSlideshow","autoSlide","activeClass","onWidthChange","getEventHandler","slideToIndex","handler","click","focus","e","scrollLeft","setItemEventHandler","bubbles","listener","setupSlider","setSlideFocusEvent","setDotClickEvent","concat","next","prev","stop","init","startSlideIndex","lastTime","vendors","x","currTime","Date","getTime","timeToCall","max","id","TouchEvents","touchStateCallback","o","preventDefault","clicksAllowed","mouse","move","end","diff","eventType","axis","support","pointerEvents","navigator","pointerEnabled","msPointerEvents","msPointerEnabled","eventModel","events","checks","touches","scale","isPrimary","buttons","pointerType","MSPOINTER_TYPE_TOUCH","MSPOINTER_TYPE_PEN","targetObj","sourceObject","el","removeEvent","getDiff","X","clientX","Y","clientY","time","touchStart","touchMove","touchEnd","abs","blur"],"mappings":"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","file":"hammerslider.min.js","sourcesContent":["function HammerSlider(_this, options) {\n  'use strict';\n\n  // Main declarations\n  const SLIDER = {\n    contentWidth: undefined,\n    container: undefined,\n    slides: undefined,\n    dotContainer: undefined,\n    dots: undefined,\n    slideData: undefined,\n    transform: undefined,\n    currentSlideIndex: undefined,\n    lastSlideIndex: undefined,\n    isLastSlide: undefined,\n    currentDistance: undefined,\n    eventListeners: undefined\n  };\n\n\n  // Default options\n  const OPTIONS = {\n    slideShow: false,\n    slideInterval: 5000,\n    slideSpeed: 1200,\n    //touchSpeed: 800,\n    startSlide: 0,\n    alignSlides: 'center',\n    dragThreshold: 10,\n    minimumDragDistance: 30,\n    stopAfterInteraction: true,\n    infinite: true,\n    mouseDrag: false,\n    dotContainer: undefined,\n    beforeSlideChange: undefined,\n    afterSlideChange: undefined,\n    onSetup: undefined,\n    classPrefix: 'c-slider'\n  };\n\n\n  // Merge user options into defaults\n  options && mergeObjects(OPTIONS, options);\n\n\n  // Class names\n  const CLASSES = {\n    container: `${OPTIONS.classPrefix}__container`,\n    slide: `${OPTIONS.classPrefix}__slide`,\n    dotContainer: `${OPTIONS.classPrefix}__dots`,\n    dotItem: `${OPTIONS.classPrefix}__dot`,\n    dotActiveClass: `${OPTIONS.classPrefix}__dot--is-active`,\n    dragging: `${OPTIONS.classPrefix}__container--is-dragging`,\n    mouseDrag: `${OPTIONS.classPrefix}__container--mouse-drag-enabled`\n  };\n\n\n  // Change to Object.assign()\n  function mergeObjects(target, source) {\n    for (let key in source) {\n      if (source.hasOwnProperty(key)) {\n        target[key] = source[key];\n      }\n    }\n    return target;\n  }\n\n\n  function getElementChildren(element, selector, all) {\n    return element && element[`querySelector${(all ? 'All' : '')}`](selector);\n  }\n\n\n  function addEvent(element, event, func, bool) {\n    element.addEventListener(event, func, !!bool);\n    return { remove: () => element.removeEventListener(event, func, !!bool) };\n  }\n\n\n  function addClass(element, className) {\n    element && element.classList.add(className);\n  }\n\n\n  function removeClass(element, className) {\n    element && element.classList.remove(className);\n  }\n\n\n  function forEachItem(array, callback, startIndex) {\n    for (let i = startIndex || 0; i < array.length; i += 1) {\n      const returnValue = callback(array[i], i);\n      if (returnValue) return returnValue;\n    }\n    return false;\n  }\n\n\n  function getPercentageOfTotal(fraction, total) {\n    return fraction / total * 100;\n  }\n\n\n  function getItemsAsArray(nodeList) {\n    const returnArray = [];\n    if (nodeList) forEachItem(nodeList, (item) => { returnArray.push(item) });\n    return returnArray;\n  }\n\n\n  function getSupportedProperty(property) {\n    const prefixes = ['', 'webkit', 'moz', 'ms', 'o'];\n    const div = document.createElement('div');\n\n    return forEachItem(prefixes, (prefix) => {\n      const formattedProperty = `${(prefix ? `-${prefix}-`: '')}${property}`;\n      if (typeof div.style[formattedProperty] !== 'undefined') return formattedProperty;\n    });\n  }\n\n\n  function getCurrentTranslate(element) {\n    const transform = window.getComputedStyle(element, null).getPropertyValue(SLIDER.transform);\n    const transformType = transform.match('matrix3d') ? 12 : 4;\n    const transformValue = parseFloat(transform.split(',')[transformType]);\n    return getPercentageOfTotal(transformValue, element.offsetWidth);\n  }\n\n\n  function setTranslate(element, value, threeD) {\n    const type = threeD ? '3d' : 'X';\n    const translate = (to) => element.style[SLIDER.transform] = `translate${type}(${to}%${threeD ? ',0,0' : ''})`;\n    if (value !== false) translate(value);\n    return translate;\n  }\n\n\n  function setItemWidth(containerWidth) {\n    return (item, index) => {\n      const width = Math.round(getPercentageOfTotal(item.element.offsetWidth, containerWidth));\n      return mergeObjects(item, { width });\n    };\n  }\n\n\n  function setItemAlignment(alignment) {\n    const align = {\n      left: (width) => 0,\n      center: (width) => (100 - width) / 2,\n      right: (width) => 100 - width\n    };\n    return align[alignment] || align['center'];\n  }\n\n\n  function setItemAlignDistance(alignItem) {\n    return (item, index, itemArray) => {\n      const alignDistance = alignItem(item.width);\n      return mergeObjects(item, { alignDistance });\n    };\n  }\n\n\n  function setDistanceToItem() {\n    return (item, index, itemArray) => {\n      const distanceToThis = itemArray.reduce((accumulator, {width}, innerIndex) => {\n        if (innerIndex > index) return accumulator;\n        return accumulator + (innerIndex === index ? item.alignDistance : -width);\n      }, 0);\n      return mergeObjects(item, { distanceToThis });\n    };\n  }\n\n\n  function setDistanceBetweenItems(lastItemIndex) {\n    return (item, index, itemArray) => {\n      const nextItemIndex = !index ? lastItemIndex : index - 1;\n      const distanceToNext = itemArray[nextItemIndex].distanceToThis - item.distanceToThis;\n      return mergeObjects(item, { distanceToNext });\n    };\n  }\n\n\n  function setItemDistanceToFlip(lastItemIndex) {\n    return (item, index, itemArray) => {\n      //if (index && index < lastItemIndex) return item;\n      const distanceToFlip = itemArray.reduce((accumulator, {width}) =>\n        accumulator + getPercentageOfTotal(width, item.width), 0);\n      return mergeObjects(item, { distanceToFlip });\n    };\n  }\n\n\n  function setItemInfinitePosition(index, lastItemIndex, itemData) {\n    if (index && index < lastItemIndex) return;\n    const direction = index ? 1 : -1;\n    const itemToPosition = itemData[(index ? 0 : lastItemIndex)];\n    setTranslate(itemToPosition.element, itemToPosition.distanceToFlip * direction);\n  }\n\n\n  function setSlideData(container, items, lastItemIndex) {\n    const setSlideWidth = setItemWidth(container.offsetWidth);\n    const setSlideAlignDistance = setItemAlignDistance(setItemAlignment(OPTIONS.alignSlides));\n    const setDistanceToSlide = setDistanceToItem();\n    const setDistanceBetweenSlides = setDistanceBetweenItems(lastItemIndex);\n    const setSlideDistanceToFlip = setItemDistanceToFlip(lastItemIndex);\n\n    const slideData = [...items]\n      .map(element => ({ element }))\n      .map(setSlideWidth)\n      .map(setSlideAlignDistance)\n      .map(setDistanceToSlide)\n      .map(setDistanceBetweenSlides)\n      .map(setSlideDistanceToFlip);\n\n    // Infinite sliding specific calculations\n    if (OPTIONS.infinite) {\n      SLIDER.contentWidth = slideData.reduce((accumulator, {width}) => accumulator + width, 0);\n      slideData[0].distanceToNext += SLIDER.contentWidth;\n    }\n    return slideData;\n  }\n\n\n  let counter = 0;\n\n\n  function flip(position, direction) {\n    /* CLEAN this up !!!! */\n    const firstSlide = SLIDER.slideData[0];\n    const slideBeforeLast = SLIDER.slideData[SLIDER.lastSlideIndex - 1];\n    const lastSlide = SLIDER.slideData[SLIDER.lastSlideIndex];\n\n    // Forward\n    if (direction === 1) {\n      const currentSlide = SLIDER.slideData[counter];\n\n      if (position < currentSlide.distanceToThis - currentSlide.alignDistance + 0.001) {\n        if (counter === 0) {\n          setTranslate(lastSlide.element, 0);\n          counter += 1;\n          return;\n        }\n\n        if ((counter > 0 && counter < SLIDER.lastSlideIndex)) {\n          const slideBefore = SLIDER.slideData[counter - 1];\n          setTranslate(slideBefore.element, slideBefore.distanceToFlip);\n          counter += 1;\n          return;\n        }\n\n        if (counter === SLIDER.lastSlideIndex) {\n          for (let i = 0; i < SLIDER.lastSlideIndex; i += 1) {\n            setTranslate(SLIDER.slideData[i].element, 0);\n          }\n          setTranslate(lastSlide.element, lastSlide.distanceToFlip * -1);\n          counter = 0;\n          return true;\n        }\n      }\n\n    }\n    // Backward\n    else {\n      if (counter === 1 && position > slideBeforeLast.distanceToThis - slideBeforeLast.alignDistance + (100 - slideBeforeLast.width - 0.0001)) {\n        setTranslate(lastSlide.element, lastSlide.distanceToFlip * -1);\n        counter = 0;\n        return;\n      }\n      if (counter === 2 && position > lastSlide.distanceToThis - lastSlide.alignDistance + (100 - lastSlide.width - 0.0001)) {\n        setTranslate(firstSlide.element, 0);\n        counter = 1;\n        return;\n      }\n\n      if (counter === 0 && position > firstSlide.distanceToThis - firstSlide.alignDistance + (100 - firstSlide.width - 0.0001)) {\n        setTranslate(firstSlide.element, firstSlide.distanceToFlip);\n        setTranslate(lastSlide.element, 0);\n        counter = 2;\n        return true;\n      }\n    }\n  }\n\n\n  function isLastItemIndex(lastIndex) {\n    return (index) => index === lastIndex;\n  }\n\n\n  function getNextItemIndex(currentItemIndex, direction) {\n    if (direction === 1) {\n      if (SLIDER.isLastSlide(currentItemIndex)) return 0;\n    } else if (!currentItemIndex) {\n      return SLIDER.lastSlideIndex;\n    }\n    return currentItemIndex + direction;\n  }\n\n\n  function slideTo(direction, jumpTo) {\n    /* Clean this mess up */\n    stopSlideshow();\n    const currentSlideIndex = direction ? getNextItemIndex(SLIDER.currentSlideIndex, direction) : jumpTo;\n    let currentDistance;\n\n    if (direction) {\n      const index = direction === 1 ? currentSlideIndex : getNextItemIndex(currentSlideIndex, 1);\n      currentDistance = SLIDER.currentDistance - SLIDER.slideData[index].distanceToNext * direction;\n    } else {\n      /*\n      if ((!SLIDER.currentSlideIndex && SLIDER.isLastSlide(jumpTo)) || (SLIDER.isLastSlide(SLIDER.currentSlideIndex) && !jumpTo)) {\n        slideTo(slideDirection * -1);\n        return;\n      }\n      */\n      currentDistance = SLIDER.slideData[jumpTo].distanceToThis;\n    }\n\n    mergeObjects(SLIDER, { currentSlideIndex, currentDistance });\n    if (OPTIONS.beforeSlideChange) OPTIONS.beforeSlideChange(currentSlideIndex);\n\n    setActiveDot(currentSlideIndex);\n    animate(currentDistance);\n  }\n\n\n  function animate(slideDistance) {\n    /* Clean this mess the HELL up */\n    const translate = setTranslate(SLIDER.container, false, true);\n    const slideSpeed = OPTIONS.slideSpeed;\n    const increment = 20;\n\n    let currPos = getCurrentTranslate(SLIDER.container);\n    let currentTime = 0;\n    let start = currPos;\n    let change = slideDistance - start;\n\n    const direction = slideDistance < currPos ? 1 : -1;\n\n    function render() {\n      // Sliding ended\n      if (currentTime > slideSpeed) {\n        //shouldResumeSlideshow(autoSlide);\n        //OPTIONS.afterSlideChange && OPTIONS.afterSlideChange();\n      }\n      // Else\n      else {\n        if (OPTIONS.infinite && flip(currPos, direction)) {\n          SLIDER.currentDistance += SLIDER.contentWidth * direction;\n          start += SLIDER.contentWidth * direction;\n        }\n        currPos = easeOutQuint(currentTime, start, change, slideSpeed);\n        currentTime += increment;\n        translate(currPos);\n        SLIDER.animationFrame = requestAnimationFrame(render);\n      }\n    }\n    SLIDER.animationFrame = requestAnimationFrame(render);\n  }\n\n\n  function easeOutQuint(t, b, c, d) {\n    t /= d;\n    t--;\n    return c * (t * t * t * t * t + 1) + b;\n  }\n\n\n  function startSlideshow() {\n    mergeObjects(SLIDER, {\n      autoTimeOut: setTimeout(() => slideTo(1), OPTIONS.slideInterval)\n    });\n  }\n\n\n  function stopSlideshow() {\n    cancelAnimationFrame(SLIDER.animationFrame);\n    clearTimeout(SLIDER.autoTimeOut);\n  }\n\n\n  function shouldResumeSlideshow(autoSlide) {\n    if ((OPTIONS.slideShow && !OPTIONS.stopAfterInteraction) || autoSlide) startSlideshow();\n  }\n\n\n  function setActiveDot(index) {\n    if (SLIDER.dots) {\n      const activeClass = CLASSES.dotActiveClass;\n      removeClass(getElementChildren(SLIDER.dotContainer, `.${activeClass}`), activeClass);\n      addClass(SLIDER.dots[index], activeClass);\n    }\n  }\n\n\n  function onWidthChange() {\n    // update slider width\n    //stopSlideshow();\n    //shouldResumeSlideshow();\n  }\n\n\n  /*function touchInit() {\n    let startPos,\n      currPos,\n      currentSlide;\n\n    TouchEvents(SLIDER.container, {\n      mouse: OPTIONS.mouseDrag,\n      dragThreshold: OPTIONS.dragThreshold,\n      // Pass touch state actions\n      start: (event) => {\n        stopSlideshow();\n        startPos = getCurrentTranslate() / SLIDER.container.offsetWidth * 100;\n        currentSlide = slideIndex % nrOfSlides;\n        // Add drag class\n        addClass(SLIDER.container, CLASSES.dragging);\n      },\n      move: (event, direction, diff) => {\n        if (direction === 'left' || direction === 'right') {\n          const horizontalDiff = diff.X / SLIDER.container.offsetWidth * 100;\n          // Calculate changed position\n          currPos = startPos + horizontalDiff;\n\n          if (!OPTIONS.rewind) {\n            flip(currPos, direction === 'left' ? 1 : -1);\n          } else if (!currentSlide && direction === 'right' || u.isLastSlide(currentSlide) && direction === 'left') {\n            // Resist dragging if it's first slide\n            // or last and if rewind is true\n            currPos = startPos + (diff.X / 2.5);\n          }\n          setTranslate(SLIDER.container, currPos);\n        }\n      },\n      end: (event, direction, diff) => {\n        let targetSlide = slideIndex;\n\n        // Only set new target slide if drag exceeds minimum drag distance\n        if (Math.abs(diff.X) > OPTIONS.minimumDragDistance) {\n          if (direction === 'left') {\n            targetSlide = OPTIONS.rewind && u.isLastSlide(currentSlide) ? u.lastSlide : u.getNextSlideNr(1);\n          } else if (direction === 'right') {\n            targetSlide = OPTIONS.rewind && !currentSlide ? 0 : u.getNextSlideNr(-1);\n          }\n        }\n        slideTo(targetSlide, false, OPTIONS.touchSpeed);\n        // Remove drag class\n        removeClass(SLIDER.container, CLASSES.dragging);\n      }\n    });\n  }*/\n\n\n  function getEventHandler(event, index) {\n    const slideToIndex = (index) => slideTo(false, index);\n    const handler = {\n      click: e => slideToIndex(index),\n      focus: (e) => {\n        stopSlideshow();\n        _this.scrollLeft = 0;\n        slideToIndex(index);\n      }\n    };\n    return handler[event];\n  }\n\n\n  function setItemEventHandler(event, bubbles) {\n    return (item, index) => {\n      const listener = addEvent(item, event, getEventHandler(event, index), bubbles);\n      return listener;\n    };\n  }\n\n\n  function setupSlider(element, startIndex) {\n    // Setup slide variables\n    const container = getElementChildren(element, `.${CLASSES.container}`);\n    const slides = getItemsAsArray(getElementChildren(container, `.${CLASSES.slide}`, true));\n    const dotContainer = OPTIONS.dotContainer || getElementChildren(element, `.${CLASSES.dotContainer}`);\n    const dots = getItemsAsArray(getElementChildren(dotContainer, `.${CLASSES.dotItem}`, true));\n    const currentSlideIndex = startIndex;\n    const lastSlideIndex = slides.length - 1;\n    const isLastSlide = isLastItemIndex(lastSlideIndex);\n    const slideData = setSlideData(container, slides, lastSlideIndex);\n    const currentDistance = slideData[currentSlideIndex].distanceToThis;\n    const transform = getSupportedProperty('transform');\n    const setSlideFocusEvent = setItemEventHandler('focus', true);\n    const setDotClickEvent = setItemEventHandler('click', false);\n    const eventListeners = slides.map(setSlideFocusEvent).concat(dots.map(setDotClickEvent));\n\n    // Bail if only one slide OR if transform is not supported\n    if (!lastSlideIndex || !transform) return;\n\n    // Merge variables into SLIDER\n    mergeObjects(SLIDER, {\n      container,\n      slides,\n      dotContainer,\n      dots,\n      slideData,\n      transform,\n      currentSlideIndex,\n      lastSlideIndex,\n      isLastSlide,\n      currentDistance,\n      eventListeners\n    });\n\n    // Set position and active dot\n    setTranslate(container, currentDistance);\n    setActiveDot(currentSlideIndex);\n\n    // Conditional actions\n    if (OPTIONS.infinite) setItemInfinitePosition(currentSlideIndex, lastSlideIndex, slideData);\n\n    if (OPTIONS.mouseDrag) addClass(container, CLASSES.mouseDrag);\n    if (OPTIONS.slideShow) startSlideshow();\n\n    if (OPTIONS.onSetup) setTimeout(() => OPTIONS.onSetup(SLIDER), 0);\n  }\n\n\n  // Init\n  //setupSlider(_this, OPTIONS.startSlide);\n\n\n  // Expose slider API\n  return {\n    next: () => slideTo(1),\n    prev: () => slideTo(-1),\n    stop: stopSlideshow,\n    start: startSlideshow,\n    init: (startSlideIndex) => {\n      // killSlider();\n      setupSlider(_this, startSlideIndex || OPTIONS.startSlide);\n    }\n    //kill: killSlider,\n    //moveTo: (slideNr, speed) => slideTo(slideNr, true, speed)\n  };\n}\n","(function() {\r\n  var lastTime = 0;\r\n  var vendors = ['ms', 'moz', 'webkit', 'o'];\r\n  for(var x = 0; x < vendors.length && !window.requestAnimationFrame; ++x) {\r\n    window.requestAnimationFrame = window[vendors[x]+'RequestAnimationFrame'];\r\n    window.cancelAnimationFrame = window[vendors[x]+'CancelAnimationFrame'] || window[vendors[x]+'CancelRequestAnimationFrame'];\r\n  }\r\n\r\n  if (!window.requestAnimationFrame)\r\n    window.requestAnimationFrame = function(callback, element) {\r\n      var currTime = new Date().getTime();\r\n      var timeToCall = Math.max(0, 16 - (currTime - lastTime));\r\n      var id = window.setTimeout(function() { callback(currTime + timeToCall); }, timeToCall);\r\n      lastTime = currTime + timeToCall;\r\n      return id;\r\n    };\r\n\r\n  if (!window.cancelAnimationFrame)\r\n    window.cancelAnimationFrame = function(id) {\r\n      clearTimeout(id);\r\n    };\r\n}());","/*!\n * Event Burrito is a touch / mouse / pointer event unifier\n * https://github.com/wilddeer/Event-Burrito\n * Copyright Oleg Korsunsky | http://wd.dizaina.net/\n *\n * MIT License\n *\n * NOTE: Event Burrito has been modified from\n * its original form to suit this project.\n */\n\n/* exported TouchEvents */\nfunction TouchEvents(_this, options) {\n  'use strict';\n\n  const touchStateCallback = () => {},\n    o = {\n      preventDefault: true,\n      clicksAllowed: true,\n      mouse: true,\n      dragThreshold: 10, // Minimum distance to determine swipe direction\n      start: touchStateCallback,\n      move: touchStateCallback,\n      end: touchStateCallback\n    };\n        \n  // Merge user options into defaults\n  options && mergeObjects(o, options);\n\n  let start = {},\n    diff = {},\n    direction,\n    eventType,\n    axis,\n    support = {\n      pointerEvents: !!window.navigator.pointerEnabled,\n      msPointerEvents: !!window.navigator.msPointerEnabled\n    },\n    eventModel = (support.pointerEvents ? 1 : (support.msPointerEvents ? 2 : 0)),\n    events = [\n      ['touchstart', 'touchmove', 'touchend', 'touchcancel'], //touch events\n      ['pointerdown', 'pointermove', 'pointerup', 'pointercancel'], //pointer events\n      ['MSPointerDown', 'MSPointerMove', 'MSPointerUp', 'MSPointerCancel'], //IE10 pointer events\n      ['mousedown', 'mousemove', 'mouseup', false] //mouse events\n    ],\n    checks = [\n      //touch events\n      (e) =>{\n        //skip the event if it's multitouch or pinch move\n        return (e.touches && e.touches.length > 1) || (e.scale && e.scale !== 1);\n      },\n      //pointer events\n      (e) => {\n        //Skip it, if:\n        //1. event is not primary (other pointers during multitouch),\n        //2. left mouse button is not pressed,\n        //3. mouse drag is disabled and event is not touch\n        return !e.isPrimary || (e.buttons && e.buttons !== 1) || (!o.mouse && e.pointerType !== 'touch' && e.pointerType !== 'pen');\n      },\n      //IE10 pointer events\n      (e) => {\n        //same checks as in pointer events\n        return !e.isPrimary || (e.buttons && e.buttons !== 1) || (!o.mouse && e.pointerType !== e.MSPOINTER_TYPE_TOUCH && e.pointerType !== e.MSPOINTER_TYPE_PEN);\n      },\n      //mouse events\n      (e) => {\n        //skip the event if left mouse button is not pressed\n        //in IE7-8 `buttons` is not defined, in IE9 LMB is 0\n        return (e.buttons && e.buttons !== 1);\n      }\n    ];\n\n\n  function mergeObjects(targetObj, sourceObject) {\n    for (let key in sourceObject) {\n      if (sourceObject.hasOwnProperty(key)) {\n        targetObj[key] = sourceObject[key];\n      }\n    }\n  }\n\n\n  function addEvent(el, event, func, bool) {\n    if (!event) return;\n    el.addEventListener(event, func, !!bool);\n  }\n\n\n  function removeEvent(el, event, func, bool) {\n    if (!event) return;\n    el.removeEventListener(event, func, !!bool);\n  }\n\n\n  function preventDefault(event) {\n    event.preventDefault ? event.preventDefault() : event.returnValue = false;\n  }\n\n\n  function getDiff(event) {\n    diff = {\n      X: (eventType ? event.clientX : event.touches[0].clientX) - start.X,\n      Y: (eventType ? event.clientY : event.touches[0].clientY) - start.Y,\n      time: new Date().getTime() - start.time\n    };\n  }\n\n\n  function touchStart(event, type) {\n    direction = '';\n    o.clicksAllowed = true;\n    eventType = type;\n\n    if (checks[eventType](event)) return;\n    if (preventDefault && eventType) preventDefault(event);\n\n    addEvent(document, events[eventType][1], touchMove);\n    addEvent(document, events[eventType][2], touchEnd);\n    addEvent(document, events[eventType][3], touchEnd);\n\n    start = {\n      X: eventType ? event.clientX : event.touches[0].clientX,\n      Y: eventType ? event.clientY : event.touches[0].clientY,\n      time: new Date().getTime()\n    };\n\n    for (let key in diff) {\n      diff[key] = 0;\n    }\n    o.start(event);\n  }\n\n\n  function touchMove(event) {\n    getDiff(event);\n\n    //Prevent document from scrolling while swiping because some mobile browsers flicker during transition and scroll.\n    document[`on${events[eventType][1]}`] = (e) => { preventDefault(e); };\n\n    if (!axis) {\n      axis = (o.dragThreshold < Math.abs(diff.X)) ? 'X' : (o.dragThreshold < Math.abs(diff.Y)) ? 'Y' : false;\n    } else {\n      if (axis === 'X') {\n        direction = (diff.X < 0) ? 'left' : 'right';\n        preventDefault && preventDefault(event);\n      } else if (axis === 'Y') {\n        direction = (diff.Y < 0) ? 'up' : 'down';\n      }\n    }\n\n    o.move(event, direction, diff);\n  }\n\n\n  function touchEnd(event) {\n    !o.clicksAllowed && event.target && event.target.blur && event.target.blur();\n\n    removeEvent(document, events[eventType][1], touchMove);\n    removeEvent(document, events[eventType][2], touchEnd);\n    removeEvent(document, events[eventType][3], touchEnd);\n\n    //Enable document scrolling\n    document[`on${events[eventType][1]}`] = (e) => { return true; };\n\n    o.end(event, direction, diff);\n    axis = false;\n  }\n\n\n  function init() {\n    // Bind touchstart\n    addEvent(_this, events[eventModel][0], (event) => {\n      touchStart(event, eventModel); \n    });\n    // Prevent stuff from dragging when using mouse\n    addEvent(_this, 'dragstart', preventDefault);\n    \n    // Bind mousedown if necessary\n    if (o.mouse && !eventModel) {\n      addEvent(_this, events[3][0], (event) => {\n        touchStart(event, 3);\n      });\n    }\n\n    // No clicking during touch\n    addEvent(_this, 'click', (event) => {\n      o.clicksAllowed ? touchStateCallback(event) : preventDefault(event);\n    });\n  }\n\n  // Init touch listeners\n  init();\n}"]}